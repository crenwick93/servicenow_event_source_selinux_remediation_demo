---
- name: Create ServiceNow emergency change request
  hosts: localhost
  become: false
  gather_facts: false
  vars:
    # ServiceNow connection is taken from environment variables set by env_script.sh
    # Required env vars: SN_HOST, SN_USERNAME, SN_PASSWORD

    # change_short_description: "Emergency change - TEST15"
    # change_description: "Detected critical hardware failure on primary DB server; immediate replacement required."
    # change_impact: high
    # change_urgency: high
    # change_assignment_group: "Event Driven Ansible"
    # change_assigned_to: ""
    # change_start: ""
    # change_end: ""

    # # Incident fields
    # incident_short_description: "Prod alert - pre-change incident"
    # incident_description: "Opening incident associated with the automated emergency change."
    # incident_impact: high
    # incident_urgency: high
    # incident_assignment_group: "{{ change_assignment_group }}"

    # Alertmanager fingerprint to correlate incident and change
    alert_fingerprint: ""

  tasks:
    - name: Create incident for the emergency change
      servicenow.itsm.incident:
        state: new
        short_description: "{{ incident_short_description }}"
        description: "{{ incident_description }}"
        impact: "{{ incident_impact }}"
        urgency: "{{ incident_urgency }}"
        other: "{{ {'assignment_group': (incident_assignment_group | default(change_assignment_group)), 'correlation_id': (alert_fingerprint | default(''))} }}"
      register: incident

    - name: Show incident identifiers
      ansible.builtin.debug:
        msg:
          - "Incident number: {{ incident.record.number | default('unknown') }}"
          - "Incident sys_id: {{ incident.record.sys_id | default('unknown') }}"

    - name: Create emergency change request
      servicenow.itsm.change_request:
        instance:
          host: "{{ lookup('env', 'SN_HOST') }}"
          username: "{{ lookup('env', 'SN_USERNAME') }}"
          password: "{{ lookup('env', 'SN_PASSWORD') }}"
        state: new
        type: emergency
        short_description: "{{ change_short_description }}"
        description: "{{ change_description }}"
        impact: "{{ change_impact }}"
        urgency: "{{ change_urgency }}"
        assignment_group: "{{ change_assignment_group | default(omit) }}"
        other: "{{ {'parent': incident.record.sys_id, 'correlation_id': (alert_fingerprint | default('')), 'correlation_display': incident.record.number} }}"
      register: change

    - name: Move change to Authorize and request approval
      servicenow.itsm.change_request:
        instance:
          host: "{{ lookup('env', 'SN_HOST') }}"
          username: "{{ lookup('env', 'SN_USERNAME') }}"
          password: "{{ lookup('env', 'SN_PASSWORD') }}"
        number: "{{ change.record.number }}"
        state: authorize
        assignment_group: "{{ change_assignment_group }}"
        other: "{{ {'approval': 'requested'} }}"

    - name: Show change identifiers
      ansible.builtin.debug:
        msg:
          - "Change number: {{ change.record.number | default('unknown') }}"
          - "Change sys_id: {{ change.record.sys_id | default('unknown') }}"

    - name: Emit identifiers for downstream workflow nodes
      ansible.builtin.set_stats:
        data:
          change_number: "{{ change.record.number | default('') }}"
        aggregate: false
